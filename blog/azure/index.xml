<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on nicoo.org</title><link>https://l480.github.io/blog/azure/</link><description>Recent content in azure on nicoo.org</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © Nico Schiering</copyright><lastBuildDate>Tue, 08 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://l480.github.io/blog/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure Naming Convention: The Kubernetes Approach</title><link>https://l480.github.io/azure-naming-convention-the-kubernetes-approach/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://l480.github.io/azure-naming-convention-the-kubernetes-approach/</guid><description>Almost all of my customers spend days and weeks thinking about and creating naming conventions for their Azure resources. However, it usually takes a very short time until these naming conventions become inconsistent, because some names are not suitable for certain resource types or some resource types are not considered in the naming convention at all. It often takes a while until they notice that a user-friendly naming convention does not make any sense in a cattle environment.</description></item><item><title>Creating Dynamic Azure Service Principals for Terraform with HashiCorp Vault</title><link>https://l480.github.io/creating-dynamic-azure-service-principals-for-terraform-with-hashicorp-vault/</link><pubDate>Tue, 23 Jun 2020 00:00:00 +0000</pubDate><guid>https://l480.github.io/creating-dynamic-azure-service-principals-for-terraform-with-hashicorp-vault/</guid><description>Everyone knows, static secrets are bad and regularly rotating them is a must. But what’s better then rotated static secrets? Right, dynamic access! And that’s were Vault from HashiCorp comes in.
What is Vault? Vault is a cloud native secret management solution from HashiCorp. It tightly controls access to secrets and encryption keys by authenticating against trusted sources of identity such as Active Directory, LDAP, Kubernetes, CloudFoundry, and cloud platforms. Vault enables fine grained authorization of which users and applications are permitted access to secrets and keys.</description></item></channel></rss>